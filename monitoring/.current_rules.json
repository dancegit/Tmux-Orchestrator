{"version": "1.0", "source": "/home/per/gitrepos/Tmux-Orchestrator/CLAUDE.md", "rules": [{"id": "comm-001", "category": "communication", "rule": "Developers must report to PM only", "violation_patterns": [{"from": "developer", "to": ["tester", "testrunner", "devops", "researcher"], "direct": true}], "severity": "high"}, {"id": "comm-002", "category": "communication", "rule": "PM aggregates and reports to Orchestrator", "violation_patterns": [{"from": ["developer", "tester", "testrunner"], "to": "orchestrator", "direct": true}], "severity": "high"}, {"id": "comm-003", "category": "communication", "rule": "No chit-chat - all messages work-related", "violation_patterns": [{"keywords": ["hi", "hello", "how are you", "thanks", "bye"], "context": "casual"}], "severity": "medium"}, {"id": "comm-004", "category": "communication", "rule": "Use message templates for standard communications", "violation_patterns": [{"message_type": "status_update", "missing_fields": ["completed", "current", "blocked"]}], "severity": "low"}, {"id": "comm-005", "category": "communication", "rule": "Always use send-claude-message.sh script", "violation_patterns": [{"command": "tmux send-keys", "context": "messaging"}], "severity": "high"}, {"id": "comm-006", "category": "communication", "rule": "Must use monitored messaging (scm or send-monitored-message.sh)", "violation_patterns": [{"command": "send-claude-message.sh", "context": "direct_use"}, {"missing": "scm", "context": "messaging"}], "severity": "critical"}, {"id": "git-001", "category": "git", "rule": "Never merge to main unless started on main", "violation_patterns": [{"action": "merge", "target": "main", "parent_not_main": true}], "severity": "critical"}, {"id": "git-002", "category": "git", "rule": "Auto-commit every 30 minutes", "violation_patterns": [{"time_since_last_commit": ">30min", "uncommitted_changes": true}], "severity": "high"}, {"id": "git-003", "category": "git", "rule": "Always commit before task switches", "violation_patterns": [{"task_switch": true, "uncommitted_changes": true}], "severity": "high"}, {"id": "git-004", "category": "git", "rule": "Create feature branches from current branch", "violation_patterns": [{"branch_creation": true, "from_wrong_parent": true}], "severity": "high"}, {"id": "git-005", "category": "git", "rule": "Use agent-specific branch names", "violation_patterns": [{"branch_name": "missing_role_suffix", "agent": true}], "severity": "medium"}, {"id": "git-006", "category": "git", "rule": "Push within 15 minutes of commit", "violation_patterns": [{"time_since_commit": ">15min", "unpushed_commits": true}], "severity": "high"}, {"id": "git-007", "category": "git", "rule": "Set upstream with -u on first push", "violation_patterns": [{"first_push": true, "missing_upstream": true}], "severity": "medium"}, {"id": "git-008", "category": "git", "rule": "Announce pushes to PM", "violation_patterns": [{"push_completed": true, "pm_not_notified": true}], "severity": "medium"}, {"id": "git-009", "category": "git", "rule": "Pull from parent branch after integration", "violation_patterns": [{"integration_complete": true, "time_since_pull": ">1hour"}], "severity": "high"}, {"id": "git-010", "category": "git", "rule": "Maximum 20 commits behind parent branch", "violation_patterns": [{"commits_behind": ">20"}], "severity": "high"}, {"id": "sched-001", "category": "scheduling", "rule": "Orchestrator must test scheduling on startup", "violation_patterns": [{"orchestrator_start": true, "schedule_test_missing": true}], "severity": "critical"}, {"id": "sched-002", "category": "scheduling", "rule": "Schedule script must accept target window parameter", "violation_patterns": [{"schedule_command": true, "missing_target": true}], "severity": "high"}, {"id": "sched-003", "category": "scheduling", "rule": "Regular check-in intervals must be maintained", "violation_patterns": [{"check_in_overdue": true, "threshold": "2x_interval"}], "severity": "medium"}, {"id": "int-001", "category": "integration", "rule": "PM handles all integration and merges", "violation_patterns": [{"integration_by": ["developer", "tester", "testrunner"]}], "severity": "high"}, {"id": "int-002", "category": "integration", "rule": "Auto-merge PRs with --admin flag", "violation_patterns": [{"pr_merge": true, "manual_approval": true}], "severity": "medium"}, {"id": "int-003", "category": "integration", "rule": "All agents must pull parent branch after integration", "violation_patterns": [{"integration_complete": true, "agents_not_synced": true}], "severity": "high"}, {"id": "int-004", "category": "integration", "rule": "Create PR within 30 minutes of push", "violation_patterns": [{"push_time": "recorded", "pr_delay": ">30min"}], "severity": "high"}, {"id": "int-005", "category": "integration", "rule": "Merge PR within 2 hours", "violation_patterns": [{"pr_age": ">2hours", "status": "open"}], "severity": "high"}, {"id": "int-006", "category": "integration", "rule": "Integration cycle completes within 4 hours", "violation_patterns": [{"cycle_start": "recorded", "duration": ">4hours"}], "severity": "critical"}, {"id": "workflow-001", "category": "workflow", "rule": "No PR should be stuck for more than 2 hours", "violation_patterns": [{"pr_status": "open", "age": ">2hours", "no_activity": true}], "severity": "high"}, {"id": "workflow-002", "category": "workflow", "rule": "No agent more than 1 hour behind parent after integration", "violation_patterns": [{"integration_announced": true, "agent_behind": ">1hour"}], "severity": "high"}, {"id": "workflow-003", "category": "workflow", "rule": "Resolve conflicts within 30 minutes", "violation_patterns": [{"conflict_detected": true, "resolution_time": ">30min"}], "severity": "high"}, {"id": "workflow-004", "category": "workflow", "rule": "Worktree discipline - no cross-worktree modifications", "violation_patterns": [{"file_modified": true, "outside_own_worktree": true}], "severity": "critical"}, {"id": "monitor-001", "category": "monitoring", "rule": "All communications must be logged", "violation_patterns": [{"message_sent": true, "not_logged": true}], "severity": "high"}, {"id": "monitor-002", "category": "monitoring", "rule": "Violations must be reported to orchestrator", "violation_patterns": [{"violation_detected": true, "orchestrator_not_notified": true}], "severity": "medium"}]}